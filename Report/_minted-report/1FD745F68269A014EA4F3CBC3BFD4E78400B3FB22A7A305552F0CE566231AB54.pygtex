\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}controller.h\PYGZdq{}}

\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}HTTPClient.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}WiFi.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}cppQueue.h\PYGZgt{}}

\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}../cap/cap.h\PYGZdq{}}

\PYG{c+cm}{/**}
\PYG{c+cm}{ * Initializing wifi connection.}
\PYG{c+cm}{ * Configuring wifi module and connecting to the network.}
\PYG{c+cm}{ * */}
\PYG{k+kt}{void} \PYG{n+nf}{initializeConnection}\PYG{p}{()} \PYG{p}{\PYGZob{}}
  \PYG{n}{WiFi}\PYG{p}{.}\PYG{n}{begin}\PYG{p}{(}\PYG{n}{SSID}\PYG{p}{,} \PYG{n}{PASSWORD}\PYG{p}{);}
  \PYG{n}{Serial}\PYG{p}{.}\PYG{n}{print}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}[WIFI] Trying to connect...\PYGZdq{}}\PYG{p}{);}
  \PYG{n}{delay}\PYG{p}{(}\PYG{l+m+mi}{1000}\PYG{p}{);}
  \PYG{k}{while} \PYG{p}{(}\PYG{n}{WiFi}\PYG{p}{.}\PYG{n}{status}\PYG{p}{()} \PYG{o}{!=} \PYG{n}{WL\PYGZus{}CONNECTED}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{n}{delay}\PYG{p}{(}\PYG{l+m+mi}{500}\PYG{p}{);}
    \PYG{n}{Serial}\PYG{p}{.}\PYG{n}{print}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}.\PYGZdq{}}\PYG{p}{);}
  \PYG{p}{\PYGZcb{}}
  \PYG{k}{const} \PYG{k+kt}{char}\PYG{o}{*} \PYG{n}{ip} \PYG{o}{=} \PYG{n}{WiFi}\PYG{p}{.}\PYG{n}{localIP}\PYG{p}{().}\PYG{n}{toString}\PYG{p}{().}\PYG{n}{c\PYGZus{}str}\PYG{p}{();}
  \PYG{n}{Serial}\PYG{p}{.}\PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{[WIFI] Connected to network with IP: \PYGZpc{}s}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,} \PYG{n}{ip}\PYG{p}{);}
\PYG{p}{\PYGZcb{}}

\PYG{c+cm}{/**}
\PYG{c+cm}{ * Sending the message body given to the endpoint}
\PYG{c+cm}{ * as a POST request.}
\PYG{c+cm}{ * Will return false if attempt failed.}
\PYG{c+cm}{ * */}
\PYG{k+kt}{bool} \PYG{n+nf}{sendPostRequest}\PYG{p}{(}\PYG{k+kt}{char}\PYG{o}{*} \PYG{n}{message}\PYG{p}{,} \PYG{k+kt}{char}\PYG{o}{*} \PYG{n}{endpoint}\PYG{p}{)} \PYG{p}{\PYGZob{}}
  \PYG{k}{if} \PYG{p}{(}\PYG{n}{WiFi}\PYG{p}{.}\PYG{n}{status}\PYG{p}{()} \PYG{o}{!=} \PYG{n}{WL\PYGZus{}CONNECTED}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{n}{Serial}\PYG{p}{.}\PYG{n}{println}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}[WIFI] Not connected to a network.\PYGZdq{}}\PYG{p}{);}
    \PYG{k}{return} \PYG{n+nb}{false}\PYG{p}{;}
  \PYG{p}{\PYGZcb{}}

  \PYG{c+c1}{// Send POST request}
  \PYG{n}{Serial}\PYG{p}{.}\PYG{n}{println}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}[WIFI] Sending POST request to the server...\PYGZdq{}}\PYG{p}{);}
  \PYG{n}{HTTPClient} \PYG{n}{http}\PYG{p}{;}
  \PYG{n}{http}\PYG{p}{.}\PYG{n}{begin}\PYG{p}{(}\PYG{n}{endpoint}\PYG{p}{);}
  \PYG{k+kt}{int} \PYG{n}{responseCode} \PYG{o}{=} \PYG{n}{http}\PYG{p}{.}\PYG{n}{POST}\PYG{p}{(}\PYG{n}{message}\PYG{p}{);}
  \PYG{n}{String} \PYG{n}{response} \PYG{o}{=} \PYG{n}{http}\PYG{p}{.}\PYG{n}{getString}\PYG{p}{();}
  \PYG{n}{http}\PYG{p}{.}\PYG{n}{end}\PYG{p}{();}

  \PYG{c+c1}{// Connection failed error codes}
  \PYG{k}{if} \PYG{p}{(}\PYG{n}{responseCode} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{0}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{n}{String} \PYG{n}{errorMessage} \PYG{o}{=} \PYG{n}{http}\PYG{p}{.}\PYG{n}{errorToString}\PYG{p}{(}\PYG{n}{responseCode}\PYG{p}{).}\PYG{n}{c\PYGZus{}str}\PYG{p}{();}
    \PYG{n}{Serial}\PYG{p}{.}\PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}[WIFI] Request failed: \PYGZpc{}s}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,} \PYG{n}{errorMessage}\PYG{p}{.}\PYG{n}{c\PYGZus{}str}\PYG{p}{());}
    \PYG{k}{return} \PYG{n+nb}{false}\PYG{p}{;}
  \PYG{p}{\PYGZcb{}}

  \PYG{c+c1}{// Server returned error code}
  \PYG{k}{if} \PYG{p}{(}\PYG{n}{responseCode} \PYG{o}{!=} \PYG{n}{HTTP\PYGZus{}CODE\PYGZus{}OK}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{n}{Serial}\PYG{p}{.}\PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}[WIFI] Server \PYGZpc{}d Response: \PYGZpc{}s}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,} \PYG{n}{responseCode}\PYG{p}{,}
                  \PYG{n}{response}\PYG{p}{.}\PYG{n}{c\PYGZus{}str}\PYG{p}{());}
    \PYG{k}{return} \PYG{n+nb}{false}\PYG{p}{;}
  \PYG{p}{\PYGZcb{}}

  \PYG{c+c1}{// Success}
  \PYG{n}{Serial}\PYG{p}{.}\PYG{n}{println}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}[WIFI] Data sent to the server.\PYGZdq{}}\PYG{p}{);}
  \PYG{k}{return} \PYG{n+nb}{true}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void} \PYG{n+nf}{processCapQueue}\PYG{p}{(}\PYG{n}{Queue}\PYG{o}{*} \PYG{n}{capCache}\PYG{p}{,} \PYG{k+kt}{int} \PYG{n}{capSize}\PYG{p}{,} \PYG{k+kt}{char}\PYG{o}{*} \PYG{n}{endpoint}\PYG{p}{)} \PYG{p}{\PYGZob{}}
  \PYG{k+kt}{int} \PYG{n}{queueLength} \PYG{o}{=} \PYG{n}{capCache}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{getCount}\PYG{p}{();}
  \PYG{k}{for} \PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{i} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;} \PYG{n}{i} \PYG{o}{\PYGZlt{}} \PYG{n}{queueLength}\PYG{p}{;} \PYG{n}{i}\PYG{o}{++}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{n}{Serial}\PYG{p}{.}\PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}[CACHE] retrieved oldest CAP. \PYGZpc{}d remaining.}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,}
                  \PYG{n}{queueLength} \PYG{o}{\PYGZhy{}} \PYG{n}{i} \PYG{o}{\PYGZhy{}} \PYG{l+m+mi}{1}\PYG{p}{);}
    \PYG{k+kt}{char} \PYG{n}{cap}\PYG{p}{[}\PYG{n}{capSize}\PYG{p}{];}
    \PYG{n}{capCache}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{pop}\PYG{p}{(}\PYG{n}{cap}\PYG{p}{);}
    \PYG{k+kt}{bool} \PYG{n}{success} \PYG{o}{=} \PYG{n}{sendPostRequest}\PYG{p}{(}\PYG{n}{cap}\PYG{p}{,} \PYG{n}{endpoint}\PYG{p}{);}
    \PYG{k}{if} \PYG{p}{(}\PYG{o}{!}\PYG{n}{success}\PYG{p}{)} \PYG{p}{\PYGZob{}}
      \PYG{n}{Serial}\PYG{p}{.}\PYG{n}{println}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}[CACHE] Request failed. Readding to cache.\PYGZdq{}}\PYG{p}{);}
      \PYG{n}{capCache}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{push}\PYG{p}{(}\PYG{n}{cap}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}
  \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
